- name: Common packages
  hosts: all
  tasks:
    - name: upgrade all
      apt:
        upgrade: full
        update_cache: yes

    - name: install common packages
      package:
        name: "{{ item }}"
        state: present
      with_items:
        - apt-transport-https
        - ca-certificates
        - curl
        - software-properties-common
        - python-pip
        - python3-pip
        - openjdk-8-jdk
        - wget
        - unzip
        - jq
        - zip
        - dos2unix
        - golang-go

    - name: install packer
      unarchive:
        src: https://releases.hashicorp.com/packer/1.3.1/packer_1.3.1_linux_amd64.zip
        dest: /usr/local/bin
        mode: 0755
        remote_src: yes

    - name: install terraform
      unarchive:
        src: https://releases.hashicorp.com/terraform/0.11.10/terraform_0.11.10_linux_amd64.zip
        dest: /usr/local/bin
        mode: 0755
        remote_src: yes

    - name: install vault
      unarchive:
        src: https://releases.hashicorp.com/vault/0.11.4/vault_0.11.4_linux_amd64.zip
        dest: /usr/local/bin
        mode: 0755
        remote_src: yes

- name: create gradle dir
  hosts: all
  tasks:
    - name: create gradle dir
      file:
        path: /opt/gradle
        state: directory
        mode: 0755

    - name: get gradle
      unarchive:
        src: https://services.gradle.org/distributions/gradle-4.10.2-bin.zip
        dest: /opt/gradle
        mode: 0755
        remote_src: yes

    - name: export gradle path
      lineinfile:
        path: "{{ item }}"
        line: "export PATH=$PATH:/opt/gradle/gradle-4.10.2/bin"
        create: yes
      with_items:
        - /root/.bashrc
        - /home/vagrant/.bashrc

- name: install amazon-ecr-credential-helper
  hosts: all
  tasks:
    - name: get helper
      git:
        repo: 'https://github.com/awslabs/amazon-ecr-credential-helper.git'
        dest: /opt/amazon-ecr-credential-helper

    - name: Check folder exists
      stat:
        path: /usr/bin/docker-credential-ecr-login
      register: stat_result

    - name: build helper
      shell: |
        cd /opt/amazon-ecr-credential-helper
        make docker
        mv bin/local/docker-credential-ecr-login /usr/bin
        chmod +x /usr/bin/docker-credential-ecr-login
      when: stat_result.stat.exists == False

    - name: create .docker
      file:
        path: "{{ item }}"
        state: directory
        mode: 0755
      with_items:
        - /root/.docker
        - /home/vagrant/.docker

    - name: cp config.json
      copy:
        src: files/config.json
        dest: "{{ item }}/config.json"
      with_items:
        - /root/.docker
        - /home/vagrant/.docker

- name: install tfe-cli
  hosts: all
  tasks:
    - name: get tfe-cli
      git:
        repo: https://github.com/hashicorp/tfe-cli.git
        dest: /opt/tfe-cli

    - name: link
      file:
        src: /opt/tfe-cli/bin/tfe
        dest: /usr/local/bin/tfe
        state: link

- name: setup awscli
  hosts: all
  tasks:
    - name: install pip packages
      pip:
        name: awscli

    - name: create .aws
      file:
        path: "{{ item }}"
        state: directory
        mode: 0755
      with_items:
        - /root/.aws
        - /home/vagrant/.aws

- name: Install Docker
  hosts: all
  tasks:
    - name: add docker gpg
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: docker apt repository
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable # bionic -> ubuntu 18.04
        state: present

    - name: install docker-ce
      package:
        name: "docker-ce"
        state: present

    - name: Add vagrant to docker group
      user:
        name: vagrant
        groups: docker
        append: yes

    - name: install compose
      get_url:
        url: https://github.com/docker/compose/releases/download/1.22.0/docker-compose-Linux-x86_64
        dest: /usr/local/bin/docker-compose
        mode: 0755

    - name: docker
      pip:
        name: "{{ item }}"
      with_items:
        - docker
        - docker-compose

# - name: Run eclipse che ide
#   hosts: all
#   tasks:
#     - name: run che ide
#       docker_service:
#         project_name: che-ide
#         pull: true
#         recreate: smart
#         definition:
#           version: "2"
#           services:
#             che:
#               image: eclipse/che
#               command: "start"
#               volumes:
#                 - "/var/run/docker.sock:/var/run/docker.sock"
#                 - "/vagrant/che-data:/data"
#               environment:
#                 - "CHE_HOST={{ ansible_eth1.ipv4.address }}" # public network from vagrant & cppib internal network
#       register: output
